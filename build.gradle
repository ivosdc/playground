buildscript {
    ext {
        springBootVersion = '2.1.1.RELEASE'
    }
    repositories {
        mavenCentral()
    }
    dependencies {
        classpath("org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}")
    }
}

apply plugin: 'java'
apply plugin: 'idea'
apply plugin: 'checkstyle'
apply plugin: 'org.springframework.boot'
apply plugin: 'io.spring.dependency-management'
apply plugin: 'jacoco'


group = 'ivosdc'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = 1.8

allprojects {
    repositories {
        mavenCentral()
        maven {
            url 'https://jitpack.io'
        }
        maven {
            url 'http://repo.spring.io/release'
        }
    }
}

bootJar {
    baseName = 'ivosdc'
    version = version
}

sourceSets {
    apiTest {
        java {
            compileClasspath += main.output + test.output
            runtimeClasspath += main.output + test.output
            srcDir file('src/apiTest/java')
        }
        resources.srcDir file('src/test/resources')
    }
    uaTest {
        java {
            compileClasspath += main.output + test.output
            runtimeClasspath += main.output + test.output
            srcDir file('src/uaTest/java')
        }
        resources.srcDir file('src/test/resources')
    }
}

configurations {
    apiTestCompile.extendsFrom testCompile
    apiTestRuntime.extendsFrom testRuntime

    uaTestCompile.extendsFrom apiTestCompile
    uaTestRuntime.extendsFrom apiTestRuntime
}

repositories {
    mavenCentral()
}

checkstyle {
    configFile = new File(rootDir, 'checkstyle.xml')
    toolVersion = '8.11'
    ignoreFailures = false
}

test {
    reports {
        junitXml.enabled = true
        html.enabled = true
    }
}

task apiTest(type: Test) {
    testClassesDirs = sourceSets.apiTest.output.classesDirs
    classpath = sourceSets.apiTest.runtimeClasspath
}

task uaTest(type: Test) {
    testClassesDirs = sourceSets.uaTest.output.classesDirs
    classpath = sourceSets.uaTest.runtimeClasspath
}


uaTest.dependsOn apiTest
apiTest.dependsOn test
apiTest.mustRunAfter test

test.outputs.upToDateWhen { false }
apiTest.outputs.upToDateWhen { false }
uaTest.outputs.upToDateWhen { false }


dependencies {
    compile('org.springframework.boot:spring-boot-starter-web')
    compile 'org.springframework.boot:spring-boot-starter-hateoas'
    compile 'org.springframework.batch:spring-batch-core'

    compile('mysql:mysql-connector-java')
    compile('org.flywaydb:flyway-core')

    compile('org.projectlombok:lombok')

    compile 'io.springfox:springfox-swagger2:2.9.2'
    compile 'io.springfox:springfox-swagger-ui:2.9.2'


    testCompile('org.springframework.boot:spring-boot-starter-test')
    testCompile 'junit:junit:4.12'
    testCompile 'org.mockito:mockito-core:2.23.4'
    testCompile 'org.springframework.batch:spring-batch-test'

    uaTestCompile 'org.fluentlenium:fluentlenium-junit:3.7.1'
    uaTestCompile 'org.fluentlenium:fluentlenium-assertj:3.7.1'
    uaTestCompile 'org.seleniumhq.selenium:selenium-chrome-driver:3.141.59'
    uaTestCompile 'org.seleniumhq.selenium:selenium-firefox-driver:3.141.59'
}
